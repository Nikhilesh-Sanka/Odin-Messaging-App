// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  firstName String
  lastName String
  username String @unique
  password String
  profile Profile?
  chats Chat[]
  sentRequests Request[] @relation("sentRequests")
  receivedRequests Request[] @relation("receivedRequests")
  status String @default("offline")
  messages Message[]
}

model Request {
  id String @id @default(uuid())
  sentUser User @relation("sentRequests",fields:[sentUserId],references:[id])
  sentUserId String
  receivedUser User @relation("receivedRequests",fields:[receivedUserId],references:[id])
  receivedUserId String
}

model Profile {
  id String @id @default(uuid())
  image String @default("./profile-icon.svg")
  bio String @default("")
  relationshipStatus String @default("single")
  user User @relation(fields:[userId],references:[id])
  userId String @unique
}

model Chat {
  id String @id @default(uuid())
  users User[]
  messages Message[]
}

model Message {
  id String @id @default(uuid())
  text String
  time String
  user User @relation(fields:[userId],references:[id])
  userId String
  chat Chat @relation(fields:[chatId],references:[id])
  chatId String
}
